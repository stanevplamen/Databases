//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TelerikAcademyModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class TelerikAcademyEntities : DbContext
    {
        public TelerikAcademyEntities()
            : base("name=TelerikAcademyEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Accounts> Accounts { get; set; }
        public DbSet<Addresses> Addresses { get; set; }
        public DbSet<Departments> Departments { get; set; }
        public DbSet<Employees> Employees { get; set; }
        public DbSet<EmployeesProjects> EmployeesProjects { get; set; }
        public DbSet<Groups> Groups { get; set; }
        public DbSet<Projects> Projects { get; set; }
        public DbSet<sysdiagrams> sysdiagrams { get; set; }
        public DbSet<Towns> Towns { get; set; }
        public DbSet<Users> Users { get; set; }
        public DbSet<Users1> Users1 { get; set; }
        public DbSet<WorkHours> WorkHours { get; set; }
        public DbSet<WorkHoursLogs> WorkHoursLogs { get; set; }
        public DbSet<V_Active_Accounts> V_Active_Accounts { get; set; }
    
        //[EdmFunction("TelerikAcademyEntities", "fn_CustomerNamesInRegion")]
        //public virtual IQueryable<fn_CustomerNamesInRegion_Result> fn_CustomerNamesInRegion(string regionParameter)
        //{
        //    var regionParameterParameter = regionParameter != null ?
        //        new ObjectParameter("regionParameter", regionParameter) :
        //        new ObjectParameter("regionParameter", typeof(string));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_CustomerNamesInRegion_Result>("[TelerikAcademyEntities].[fn_CustomerNamesInRegion](@regionParameter)", regionParameterParameter);
        //}
    
        //public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        //{
        //    var diagramnameParameter = diagramname != null ?
        //        new ObjectParameter("diagramname", diagramname) :
        //        new ObjectParameter("diagramname", typeof(string));
    
        //    var owner_idParameter = owner_id.HasValue ?
        //        new ObjectParameter("owner_id", owner_id) :
        //        new ObjectParameter("owner_id", typeof(int));
    
        //    var versionParameter = version.HasValue ?
        //        new ObjectParameter("version", version) :
        //        new ObjectParameter("version", typeof(int));
    
        //    var definitionParameter = definition != null ?
        //        new ObjectParameter("definition", definition) :
        //        new ObjectParameter("definition", typeof(byte[]));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        //}
    
        //public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        //{
        //    var diagramnameParameter = diagramname != null ?
        //        new ObjectParameter("diagramname", diagramname) :
        //        new ObjectParameter("diagramname", typeof(string));
    
        //    var owner_idParameter = owner_id.HasValue ?
        //        new ObjectParameter("owner_id", owner_id) :
        //        new ObjectParameter("owner_id", typeof(int));
    
        //    var versionParameter = version.HasValue ?
        //        new ObjectParameter("version", version) :
        //        new ObjectParameter("version", typeof(int));
    
        //    var definitionParameter = definition != null ?
        //        new ObjectParameter("definition", definition) :
        //        new ObjectParameter("definition", typeof(byte[]));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        //}
    
        //public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        //{
        //    var diagramnameParameter = diagramname != null ?
        //        new ObjectParameter("diagramname", diagramname) :
        //        new ObjectParameter("diagramname", typeof(string));
    
        //    var owner_idParameter = owner_id.HasValue ?
        //        new ObjectParameter("owner_id", owner_id) :
        //        new ObjectParameter("owner_id", typeof(int));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        //}
    
        //public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        //{
        //    var diagramnameParameter = diagramname != null ?
        //        new ObjectParameter("diagramname", diagramname) :
        //        new ObjectParameter("diagramname", typeof(string));
    
        //    var owner_idParameter = owner_id.HasValue ?
        //        new ObjectParameter("owner_id", owner_id) :
        //        new ObjectParameter("owner_id", typeof(int));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        //}
    
        //public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        //{
        //    var diagramnameParameter = diagramname != null ?
        //        new ObjectParameter("diagramname", diagramname) :
        //        new ObjectParameter("diagramname", typeof(string));
    
        //    var owner_idParameter = owner_id.HasValue ?
        //        new ObjectParameter("owner_id", owner_id) :
        //        new ObjectParameter("owner_id", typeof(int));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        //}
    
        //public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        //{
        //    var diagramnameParameter = diagramname != null ?
        //        new ObjectParameter("diagramname", diagramname) :
        //        new ObjectParameter("diagramname", typeof(string));
    
        //    var owner_idParameter = owner_id.HasValue ?
        //        new ObjectParameter("owner_id", owner_id) :
        //        new ObjectParameter("owner_id", typeof(int));
    
        //    var new_diagramnameParameter = new_diagramname != null ?
        //        new ObjectParameter("new_diagramname", new_diagramname) :
        //        new ObjectParameter("new_diagramname", typeof(string));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        //}
    
        //public virtual int sp_upgraddiagrams()
        //{
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        //}
    
        //public virtual ObjectResult<usp_SelectEmployeesBySeniority_Result> usp_SelectEmployeesBySeniority(Nullable<int> minYearsAtWork)
        //{
        //    var minYearsAtWorkParameter = minYearsAtWork.HasValue ?
        //        new ObjectParameter("minYearsAtWork", minYearsAtWork) :
        //        new ObjectParameter("minYearsAtWork", typeof(int));
    
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectEmployeesBySeniority_Result>("usp_SelectEmployeesBySeniority", minYearsAtWorkParameter);
        //}
    
        //public virtual ObjectResult<usp_SelectSeniorEmployees_Result> usp_SelectSeniorEmployees()
        //{
        //    return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_SelectSeniorEmployees_Result>("usp_SelectSeniorEmployees");
        //}
    }
}
